rule File_Download_Via_Bitsadmin {
    meta:
        title = "File Download Via Bitsadmin"
        id = "d059842b-6b9d-4ed1-b5c3-5b89143c6ede"
        status = "test"
        description = "Detects usage of bitsadmin downloading a file"
        references = "https://blog.netspi.com/15-ways-to-download-a-file/#bitsadmin, https://isc.sans.edu/diary/22264, https://lolbas-project.github.io/lolbas/Binaries/Bitsadmin/"
        author = "Michael Haag, FPT.EagleEye"
        date = "2017/03/09"
        modified = "2023/02/15"
        tags = "attack.defense_evasion, attack.persistence, attack.t1197, attack.s0190, attack.t1036.003"
        falsepositives = "Some legitimate apps use this, but limited."
        level = "medium"
    strings:
        $bitsadminImage = "*\\bitsadmin.exe" wide
        $bitsadminOriginalFileName = "bitsadmin.exe" wide
    condition:
        ($bitsadminImage at pe.image(0, pe.sections_virtual_size(pe.Rsrc)) and
        $bitsadminOriginalFileName at pe.entry_point) and
        (any of them for $s in (1, #s) : (
            $s == #s and
            (
                any of ($s1 in (1, #s), $s1 == #s and $s2 == #s and $s3 == #s) : (
                    (
                        (pe.image(0, pe.sections_virtual_size(pe.Rsrc)) contains 1 of them) or
                        (pe.entry_point contains 1 of them)
                    ) and
                    all of ($s1 in (1, #s1), $s1 == #s1 and pe.entry_point contains $s1, $s2 in (1, #s2), $s2 == #s2 and pe.entry_point contains $s2, $s3 in (1, #s3), $s3 == #s3 and pe.entry_point contains $s3)
                )
            )
        ))
}
