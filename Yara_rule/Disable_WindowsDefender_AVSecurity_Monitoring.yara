rule DisableWindowsDefenderAVSecurityMonitoring {
    meta:
        description = "Detects attackers attempting to disable Windows Defender using PowerShell"
        author = "ok @securonix invrep-de, oscd.community, frack113"
        date = "2020/10/12"
        reference = "https://research.nccgroup.com/2020/06/23/wastedlocker-a-new-ransomware-variant-developed-by-the-evil-corp-group/"
        tags = "attack.defense_evasion, attack.t1562.001"
    strings:
        $pwsh_binary1 = "powershell.exe" wide ascii nocase
        $pwsh_binary2 = "pwsh.exe" wide ascii nocase
        $pwsh_binary3 = "PowerShell.EXE" wide ascii nocase
        $pwsh_binary4 = "pwsh.dll" wide ascii nocase
        $pwsh_cli1 = "-DisableBehaviorMonitoring $true" wide ascii nocase
        $pwsh_cli2 = "-DisableRuntimeMonitoring $true" wide ascii nocase
        $sc_binary = "sc.exe" wide ascii nocase
        $sc_tamper_cmd_stop1 = "stop" wide ascii nocase
        $sc_tamper_cmd_stop2 = "WinDefend" wide ascii nocase
        $sc_tamper_cmd_delete1 = "delete" wide ascii nocase
        $sc_tamper_cmd_delete2 = "WinDefend" wide ascii nocase
        $sc_tamper_cmd_disabled1 = "config" wide ascii nocase
        $sc_tamper_cmd_disabled2 = "WinDefend" wide ascii nocase
        $sc_tamper_cmd_disabled3 = "start=disabled" wide ascii nocase
    condition:
        any of ($pwsh_binary*, $pwsh_cli*, $sc_binary) or
        all of ($sc_tamper_cmd_stop*, $sc_tamper_cmd_delete*, $sc_tamper_cmd_disabled*)
}
