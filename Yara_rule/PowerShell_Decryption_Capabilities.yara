rule PowerShellDecryptionCapabilities {
    meta:
        description = "Detects PowerShell commands that decrypt an '.LNK' file to drop the next stage of the malware"
        author = "X__Junior (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)"
        date = "2023/06/30"
        reference = "https://research.checkpoint.com/2023/chinese-threat-actors-targeting-europe-in-smugx-campaign/"
        tags = "attack.execution"
    strings:
        $img_endswith = "powershell.exe" wide ascii nocase
        $img_endswith2 = "pwsh.exe" wide ascii nocase
        $ofn1 = "PowerShell.EXE" wide ascii nocase
        $ofn2 = "pwsh.dll" wide ascii nocase
        $cli_dir = "Get-ChildItem" wide ascii nocase
        $cli_dir2 = "dir" wide ascii nocase
        $cli_dir3 = "gci" wide ascii nocase
        $cli_dir4 = "ls" wide ascii nocase
        $cli_gc = "Get-Content" wide ascii nocase
        $cli_gc2 = "gc" wide ascii nocase
        $cli_gc3 = "cat" wide ascii nocase
        $cli_gc4 = "type" wide ascii nocase
        $cli_gc5 = "ReadAllBytes" wide ascii nocase
        $cli_specific1 = "^|" wide ascii nocase
        $cli_specific2 = "*.lnk" wide ascii nocase
        $cli_specific3 = "-Recurse" wide ascii nocase
        $cli_specific4 = "-Skip" wide ascii nocase
        $cli_specific5 = "-ExpandProperty" wide ascii nocase
        $cli_specific6 = "*.lnk" wide ascii nocase
        $cli_specific7 = "WriteAllBytes" wide ascii nocase
        $cli_specific8 = ".length" wide ascii nocase
    condition:
        (
            ($img_endswith at 0 or $img_endswith2 at 0) and
            ($ofn1 at 0 or $ofn2 at 0) and
            any of ($cli_dir*, $cli_gc*) and
            (
                all of ($cli_specific*) or
                (
                    2 of ($cli_specific*) and
                    2 of ($cli_dir*, $cli_gc*)
                )
            )
        )
}
